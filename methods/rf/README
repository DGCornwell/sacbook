Tools for receiver function (RF) processing and modelling.
    G. Helffrich/U. Bristol
    last updated 24 Oct. 2018

    These require a functioning SAC and i/o library, and the Buland and Kennett
    tau-P tables and their subroutine interface library.  They also require
    versions of the Numerical Recipes (NR) routines four1.f and realft.f.
    Note that NR version 2 of realft.f is required.  If you don't have these
    routines, a substitute is available, but you must modify the Makefile (see
    step 3 below) to use it.

    Users are requested to cite (as appropriate):
       Helffrich, G. Extended-time multi-taper frequency domain
       cross-correlation receiver function estimation. Bull. Seismo. Soc. Am.,
       v. 96, 344-347, 2006.

Major components:

mtrf:  SAC macro to run the mtdecon program to estimate receiver functions
    using the multitaper method of Park and Levin.

mtdecon:  Program invoked by mtrf to do the heavy lifting.

hkplot:  SAC macro to run the hk program for Moho analysis.

hk: Program to do RF Moho analysis using Zhu and Kanamori stacking.

setrfslow:  Utility program to calculate RF slownesses from the event
    information in the SAC file header and place them in the header for use
    by the hkplot macro/hk program.

prompt:  SAC macro to do input prompting from the user.

ttimes:  This macro is in the splitting program collection in the associated
    directory.

To build and test:

1.  Get and install SAC

2.  Modify the Makefile to choose your Fortran compiler and indicate the
    location of the SAC libraries.  Also download and compile the Buland and
    Kennett TauP routines and fill in their locations in the Makefile.
    See http://www1.gly.bris.ac.uk/~george/sac-bugs.html#ttimes for source
    code download instructions.

3.  Put your personal copies of realft.f and four1.f in this directory along
    with this source code.  The Makefile will try to link them from your home
    directory, but this probably won't work for you and you'll need to do it
    manually.  If you won't have realft.f and four1.f, edit the Makefile to
    use the replacement version, realftalt.f

4.  make

    If this does not succeed, and fails while making mtdecon, review step 3
    and make sure that you are using realft.f and four1.f, or realftalt.f as
    appropriate.  If this fails while making sacsetrfslow, make sure that the
    Makefile has the correct location of your TauP routines, the correct
    location of libsacio.a, and that you are using the SAC/BRIS version of
    libsacio.a rather than SAC2000's libsacio.a.  The routines RSACH and WSACH
    are missing in SAC2000.  If you want to or need to use the SAC2000
    libraries, find the code for rwsach.f in the missing-stuff/ directory,
    compile it, and add it to the files to be linked together to make
    sacsetrfslow.

5.  Test mtrf.  Start SAC and open a plotting window (if not automatically
    done in your startup file).  Then, in SAC, issue the command:

    m mtrf file efam.syn comps r t z phase P

    You should get a display that shows the receiver function.  You should
    also see the files:

    efam.syn.nrfr
    efam.syn.nrft
    efam.syn.nrfz

6.  Test hkplot.
    Put the slowness into the header of your RF estimates.  In the shell:

    ls efam*nrf[rtz] | setrfslow -set user0 -model ak135

    This says to store slowness calculated using the ak135 model in user0 for
    each file, in s/deg.

    Now, in SAC, process the one RF (not very many but OK for a test) to make
    an H-k plot:

    m hkplot pat efam*.nrfr p user0 s/deg

    You should see a color plot on your screen, and a poorly-displayed peak at
    about kappa=1.65 and H=13 km.

--------------------------------------------------------------------------------
 
  Copyright (c) 2013 by G. Helffrich.
  All rights reserved.
 
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the distribution.  
    * The names of the authors may not be used to endorse or promote products
      derived from this software without specific prior written permission.

  THERE IS NO WARRANTY EXPRESSED OR IMPLIED, NOR LIABILITY FOR DAMAGES ASSUMED,
  IN PROVIDING THIS SOFTWARE.
--------------------------------------------------------------------------------
